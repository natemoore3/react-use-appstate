{"version":3,"sources":["../../src/AppStateContext.ts","../../src/useAppState.ts","../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../../src/utils/stateHelpers/setLoading.ts","../../src/utils/generators/api.ts","../../src/utils/stateHelpers/setError.ts","../../src/utils/generators/action.ts","../../src/utils/generators/customAction.ts","../../src/generate.ts","../../src/appStateReducer.ts","../../src/AppStateProvider.tsx","../../src/utils/stateHelpers/createInitialState.ts","hooks/intialState.js","hooks/useForm.js","hooks/useDemoState.js","components/Form.js","pages/StepOne.js","pages/StepTwo.js","App.js","index.js"],"names":["AppStateContext","createContext","state","setState","useAppState","useContext","Symbol","iterator","asyncIterator","setLoading","name","value","loading","api","apiFunctions","Object","body","finalizer","result","e","then","bind","recover","error","setError","action","data","payload","generateCommonAction","customAction","actions","generate","customActionGenerator","actionGenerator","apiGenerator","reducer","produce","merge","draftState","AppStateProvider","children","initialState","useReducer","createInitialState","dispatch","type","intialState","useForm","firstName","lastName","email","phone","useDemoState","hello","get","query","appState","setAppState","a","fetch","formResponse","json","args","Form","step","next","demoData","Grid","container","justify","alignContent","spacing","AppBar","Toolbar","style","display","justifyContent","Typography","variant","IconButton","onClick","window","location","assign","fill","item","xs","marginTop","Card","padding","minHeight","onSubmit","textAlign","CircularProgress","TextField","label","onChange","target","margin","fullWidth","phoneNumber","Button","color","md","marginBottom","id","theme","main","key","string","boolean","StepOne","history","useHistory","useEffect","preventDefault","push","StepTwo","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86bd1d34.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst AppStateContext = createContext<IAppStateContext>({\n    state: {},\n    setState: () => {}\n})\n\nexport default AppStateContext\n","import { useContext } from 'react'\nimport AppStateContext from './AppStateContext'\n\nexport default function useAppState(): [TAppState, TSetState] {\n    const { state, setState } = useContext(AppStateContext)\n    return [state, setState]\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","export default function setLoading(\n    name: string,\n    setState: TSetState,\n    value: Object\n) {\n    setState({\n        [name]: {\n            loading: value\n        }\n    })\n}\n","import useAppState from '../../useAppState'\nimport { setLoading, setError } from '../stateHelpers'\n\nexport default function api(name: string, apiFunctions: Object) {\n    const [state, setState] = useAppState()\n\n    return Object.keys(apiFunctions).reduce(\n        (obj, key) => ({\n            ...obj,\n            [key]: async (payload: Object) => {\n                try {\n                    setLoading(name, setState, true)\n                    await apiFunctions[key](payload, state, setState)\n                } catch (error) {\n                    setError(name, setState, error)\n                } finally {\n                    setLoading(name, setState, false)\n                }\n            }\n        }),\n        {}\n    )\n}\n","export default function setError(\n    name: string,\n    setState: TSetState,\n    value: Object\n) {\n    setState({\n        [name]: {\n            error: value\n        }\n    })\n}\n","import useAppState from '../../useAppState'\n\nfunction generateCommonAction(name: string, setState: TSetState) {\n    return {\n        setState: (payload: Object) => {\n            setState({\n                [name]: {\n                    data: payload\n                }\n            })\n        }\n    }\n}\n\nexport default function action(name: string) {\n    const [, setState] = useAppState()\n\n    return {\n        ...generateCommonAction(name, setState)\n    }\n}\n","import useAppState from '../../useAppState'\n\nexport default function customAction(actions: Object) {\n    const [state, setState] = useAppState()\n\n    return Object.keys(actions).reduce(\n        (obj, key) => ({\n            ...obj,\n            [key]: (payload: Object) => {\n                return actions[key](payload, state, setState)\n            }\n        }),\n        {}\n    )\n}\n","import useAppState from './useAppState'\nimport {\n    api as apiGenerator,\n    action as actionGenerator,\n    customAction as customActionGenerator\n} from './utils/generators'\n\nconst generate = (name = '', { actions = {}, api = {} }) => () => {\n    const [state] = useAppState()\n\n    return {\n        state: state[name],\n        actions: {\n            ...customActionGenerator(actions),\n            ...actionGenerator(name)\n        },\n        api: apiGenerator(name, api)\n    }\n}\n\nexport default generate\n","import produce from 'immer'\nimport merge from 'deepmerge'\n\nexport default function reducer(state: TAppState, action: TAction): TAppState {\n    switch (action.type) {\n        case 'SET_STATE': {\n            const nextState = produce(state, (draftState) => {\n                return merge(draftState, action.payload)\n            })\n\n            return nextState\n        }\n        default:\n            throw new Error()\n    }\n}\n","import React, { useReducer } from 'react'\nimport createInitialState from './utils/stateHelpers/createInitialState'\nimport AppStateContext from './AppStateContext'\nimport appStateReducer from './appStateReducer'\n\nexport default function AppStateProvider({\n    children,\n    initialState\n}: IAppStateProvider): React.ReactElement {\n    const [state, dispatch] = useReducer(\n        appStateReducer,\n        createInitialState(initialState)\n    )\n\n    function setState(payload: TAppState) {\n        dispatch({\n            type: 'SET_STATE',\n            payload\n        })\n    }\n\n    return (\n        <AppStateContext.Provider value={{ state, setState }}>\n            {children}\n        </AppStateContext.Provider>\n    )\n}\n","export default function createInitialState(initialState: TAppState) {\n    return Object.keys(initialState).reduce(\n        (obj, key) => ({\n            ...obj,\n            [key]: {\n                data: initialState[key],\n                loading: false,\n                error: null\n            }\n        }),\n        {}\n    )\n}\n","const intialState = {\n    useForm: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: ''\n    },\n    useDemoState: {\n        hello: 'world'\n    },\n}\n\nexport default intialState\n","import { generate } from 'react-use-appstate'\n\nexport default generate('useForm', {\n    api: {\n        /**\n         * Expose a set of API's to fetch, update, create etc. These must be created\n         * here, the hook will not expose any default API's\n         */\n        get: async (query, appState, setAppState) => {\n            await fetch('https://postman-echo.com/delay/2')\n            const formResponse = await fetch(\n                'https://postman-echo.com/get?firstName=Nathan'\n            )\n            const { args } = await formResponse.json()\n\n            setAppState({\n                useForm: {\n                    data: {\n                        firstName: args.firstName,\n                    }\n                }\n            })\n        }\n    }\n})\n","import { generate } from 'react-use-appstate'\n\nexport default generate('useDemoState', {})\n","import React from 'react'\nimport JSONPretty from 'react-json-pretty'\nimport { useAppState } from 'react-use-appstate'\nimport {\n    Grid,\n    Card,\n    Typography,\n    AppBar,\n    Toolbar,\n    Button,\n    TextField,\n    CircularProgress,\n    IconButton\n} from '@material-ui/core'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport useDemoState from '../hooks/useDemoState'\n\nexport default function Form({ state, setState, step, next }) {\n    const [appState] = useAppState();\n    const {\n        state: {\n            data: demoData\n        }\n    } = useDemoState()\n    const { data, loading } = state\n\n    return (\n        <Grid container justify='center' alignContent='center' spacing={4}>\n            <AppBar>\n                <Toolbar style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <Typography variant='h6'>react-use-appstate Demo</Typography>\n                    <IconButton\n                        onClick={() => {\n                            window.location.assign('https://github.com/natemoore3/react-use-appstate');\n                        }}\n                    >\n                        <GitHubIcon style={{ fill: \"#ffffff\" }} />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Grid item xs={9} style={{ marginTop: 100 }}>\n                <Card style={{ padding: '24px 100px', minHeight: 275 }}>\n                    <Typography variant='h5'>Demo Form</Typography>\n                    <form onSubmit={next}>\n                        {loading ? (\n                            <div style={{ textAlign: 'center' }}>\n                                <CircularProgress />\n                            </div>\n                        ) : (\n                            <>\n                                {step === 1 && (\n                                    <>\n                                        <TextField\n                                            value={data.firstName}\n                                            variant='outlined'\n                                            label='First Name'\n                                            name='firstName'\n                                            onChange={(e) =>\n                                                setState({\n                                                    [e.target.name]:\n                                                        e.target.value\n                                                })\n                                            }\n                                            margin='normal'\n                                            fullWidth\n                                        />\n                                        <TextField\n                                            value={data.lastName}\n                                            variant='outlined'\n                                            label='Last Name'\n                                            name='lastName'\n                                            onChange={(e) =>\n                                                setState({\n                                                    [e.target.name]:\n                                                        e.target.value\n                                                })\n                                            }\n                                            margin='normal'\n                                            fullWidth\n                                        />\n                                    </>\n                                )}\n                                {step === 2 && (\n                                    <>\n                                        <TextField\n                                            value={data.email}\n                                            variant='outlined'\n                                            label='Email'\n                                            name='email'\n                                            onChange={(e) =>\n                                                setState({\n                                                    [e.target.name]:\n                                                        e.target.value\n                                                })\n                                            }\n                                            margin='normal'\n                                            fullWidth\n                                        />\n                                        <TextField\n                                            value={data.phoneNumber}\n                                            variant='outlined'\n                                            label='Phone Number'\n                                            name='phone'\n                                            onChange={(e) =>\n                                                setState({\n                                                    [e.target.name]:\n                                                        e.target.value\n                                                })\n                                            }\n                                            margin='normal'\n                                            fullWidth\n                                        />\n                                    </>\n                                )}\n                                {step === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='secondary'\n                                        style={{ marginTop: 24 }}\n                                        onClick={next}\n                                        type='submit'\n                                    >\n                                        Next\n                                    </Button>\n                                )}\n                            </>\n                        )}\n                    </form>\n                </Card>\n            </Grid>\n            <Grid item md={4}>\n                <Card style={{ padding: '24px 100px' }}>\n                    <div>\n                        <Typography variant='h5' style={{ marginBottom: 10 }}>\n                        useForm Hook\n                        </Typography>\n                        <JSONPretty\n                            id='json-state'\n                            data={state}\n                            theme={{\n                                main:\n                                    'line-height:1.3;color:#66d9ef;background:#272822;overflow:auto;padding:12px',\n                                error:\n                                    'line-height:1.3;color:#66d9ef;background:#272822;overflow:auto;',\n                                key: 'color:#f92672;',\n                                string: 'color:#fd971f;',\n                                value: 'color:#a6e22e;',\n                                boolean: 'color:#ac81fe;'\n                            }}\n                        />\n                    </div>\n                    <div>\n                        <Typography variant='h5' style={{ marginBottom: 10 }}>\n                        useDemoState Hook\n                        </Typography>\n                        <JSONPretty\n                            id='json-state'\n                            data={demoData}\n                            theme={{\n                                main:\n                                    'line-height:1.3;color:#66d9ef;background:#272822;overflow:auto;padding:12px',\n                                error:\n                                    'line-height:1.3;color:#66d9ef;background:#272822;overflow:auto;',\n                                key: 'color:#f92672;',\n                                string: 'color:#fd971f;',\n                                value: 'color:#a6e22e;',\n                                boolean: 'color:#ac81fe;'\n                            }}\n                        />\n                    </div>\n                </Card>\n            </Grid>\n            <Grid item md={4}>\n                <Card style={{ padding: '24px 100px' }}>\n                    <Typography variant='h5' style={{ marginBottom: 10 }}>\n                        App State\n                    </Typography>\n                    <JSONPretty\n                        id='json-state'\n                        data={appState}\n                        theme={{\n                            main:\n                                'line-height:1.3;color:#66d9ef;background:#272822;overflow:auto;padding:12px',\n                            error:\n                                'line-height:1.3;color:#66d9ef;background:#272822;overflow:auto;',\n                            key: 'color:#f92672;',\n                            string: 'color:#fd971f;',\n                            value: 'color:#a6e22e;',\n                            boolean: 'color:#ac81fe;'\n                        }}\n                    />\n                </Card>\n            </Grid>\n        </Grid>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport useForm from '../hooks/useForm'\nimport Form from '../components/Form'\n\nexport default function StepOne() {\n    const history = useHistory()\n    const {\n        state,\n        actions: { setState },\n        api\n    } = useForm()\n\n    useEffect(() => {\n        const fetch = async () => api.get()\n        fetch()\n    }, [])\n\n    return (\n        <Form\n            state={state}\n            setState={setState}\n            step={1}\n            next={(e) => {\n                e.preventDefault()\n                history.push('/demo/step-two')\n            }}\n        />\n    )\n}\n","import React from 'react'\nimport useForm from '../hooks/useForm'\nimport Form from '../components/Form'\n\nexport default function StepTwo() {\n    const {\n        state,\n        actions: { setState }\n    } = useForm()\n\n    return <Form state={state} setState={setState} step={2} />\n}\n","import React from 'react'\nimport { AppStateProvider } from 'react-use-appstate'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport intialState from './hooks/intialState'\nimport StepOne from './pages/StepOne'\nimport StepTwo from './pages/StepTwo'\n\nexport default function App() {\n    return (\n        <AppStateProvider initialState={intialState}>\n            <Router>\n                <Switch>\n                    <Route path='/demo/step-one'>\n                        <StepOne />\n                    </Route>\n                    <Route path='/demo/step-two'>\n                        <StepTwo />\n                    </Route>\n                </Switch>\n            </Router>\n        </AppStateProvider>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}